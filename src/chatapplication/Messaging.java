/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatapplication;

import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.List;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Tri
 */
public class Messaging extends javax.swing.JFrame {

    /**
     * Creates new form Messaging
     */
    
    public String Chat_User="";
    
    public Messaging() {
        initComponents();

        String[] data = {"User 1", "User 2", "User 3", "User 4", "User 5",
            "User 6", "User 7", "User 8", "User 9", "User 10"};
        final JList list = new JList(data);

        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting() == false) {
                    if (list.getSelectedIndex() == -1) {
                        Chatting_User.setText(Chatting_User.getText());
                    } else {
                        Chatting_User.setText("Chat With: " + list.getSelectedValue().toString());
                        Chat_User=list.getSelectedValue().toString();
                        ReadFile(Chat_User+".txt");
                    }
                }
            }
        });

        list.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        list.setLayoutOrientation(JList.VERTICAL);
        list.setVisibleRowCount(-1);

        JScrollPane listScroller = new JScrollPane(list);
        //listScroller.getViewport().setViewPosition(new Point(30,30));
        listScroller.setLocation(30, 32);
        listScroller.setSize(140, 320);

        add(listScroller);

//        ArrayList<String> x = new ArrayList<String>();
//        x.add("User 1\n");
//        x.add("User 2\n");
//        x.add("User 3\n");
//        x.add("User 4\n");
//        x.add("User 5\n");
//        String[] words = new String[x.size()];
//        x.toArray(words);
//        FriendArea= new javax.swing.JTextArea();
//        FriendArea.setEditable(false);
//        FriendArea.setColumns(20);
//        FriendArea.setRows(5);
//        for(String W: words)
//        FriendArea.append(W);
//        
//        jScrollPane1.setViewportView(FriendArea);
        MessageArea.setColumns(20);
        MessageArea.setLineWrap(true);
        MessageArea.setRows(5);
        jScrollPane3.setViewportView(MessageArea);

        ContentArea.setColumns(20);
        ContentArea.setEditable(false);
        ContentArea.setFont(new java.awt.Font("Times New Roman", 0, 16)); //
        ContentArea.setLineWrap(true);
        ContentArea.setRows(5);

        jScrollPane2.setViewportView(ContentArea);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        ContentArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        MessageArea = new javax.swing.JTextArea();
        Send = new java.awt.Button();
        jLabel1 = new javax.swing.JLabel();
        Chatting_User = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ContentArea.setColumns(20);
        ContentArea.setRows(5);
        jScrollPane2.setViewportView(ContentArea);

        MessageArea.setColumns(20);
        MessageArea.setRows(5);
        jScrollPane3.setViewportView(MessageArea);

        Send.setActionCommand("Send");
        Send.setLabel("Send");
        Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });

        jLabel1.setText("Friends");

        Chatting_User.setForeground(new java.awt.Color(0, 0, 255));
        Chatting_User.setText("Chat With: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Chatting_User, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(16, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Chatting_User)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Send, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ActionListener actionListener = new ActionListener() {
        public void actionPerformed(ActionEvent actionEvent) {

            System.out.println(actionEvent.getActionCommand());
        }
    };

    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
        // TODO add your handling code here:
        String ask = "User 1: " + MessageArea.getText() + "\n";
        if (!ask.equals("User 1: \n")) {
            ContentArea.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
            ContentArea.append(ask);
            ContentArea.update(ContentArea.getGraphics());
        }
        WriteFile(Chat_User+".txt",ask);
//        ContentArea.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
//        ContentArea.append(ans);
//        ContentArea.update(ContentArea.getGraphics());
        ContentArea.setCaretPosition(ContentArea.getText().length() - 1);
        MessageArea.setText("");
    }//GEN-LAST:event_SendActionPerformed
    /**
     * @param args the command line arguments
     */
    
    public void WriteFile(String FileName,String text)
    {
        try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(FileName, true)))) {
            out.println(text);
        }catch (IOException e) {
        }
    }
    
    public void ReadFile(String fileName)
    {
        ContentArea.setText("");
        String line=null;
        try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = 
                new FileReader(fileName);

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);

            while((line = bufferedReader.readLine()) != null) {
                if(line!="\n")
                    ContentArea.append(line+"\n");
            }   
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                fileName + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + fileName + "'");                  
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Messaging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Messaging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Messaging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Messaging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Messaging().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Chatting_User;
    private javax.swing.JTextArea ContentArea;
    private javax.swing.JTextArea MessageArea;
    private java.awt.Button Send;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
